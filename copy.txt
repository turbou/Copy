    def get_search_results(self, request, queryset, search_term):
        queryset, use_distinct = super().get_search_results(request, queryset, search_term)
        if ':' in search_term:
            array = search_term.split(':')
            code = array[0]
            name = ''.join(array[1:])
            if len(array) > 1:
                kok = SampleObj.objects.filter(cd=code, name=name).first()
                if kok:
                    queryset |= self.model.objects.filter(kokyaku=kok.id)
        return queryset, use_distinct

{% with id=widget.attrs.id %}
<ul{% if id %} id="{{ id }}"{% endif %}{% if widget.attrs.class %} class="{{ widget.attrs.class }}"{% endif %}>{% for group, options, index in widget.optgroups %}{% if group %}
  <li>{{ group }}<ul{% if id %} id="{{ id }}_{{ index }}"{% endif %}>{% endif %}{% for option in options %}
    <li style="display: inline-block; margin-right: 10px;">{% include option.template_name with widget=option %}</li>{% endfor %}{% if group %}
  </ul></li>{% endif %}{% endfor %}
</ul>{% endwith %}

class HorizontalRadioSelect(forms.RadioSelect):
    template_name = 'horizontal_radio.html'
    
contract_type = forms.ChoiceField(label='契約種別', initial='temp', widget=HorizontalRadioSelect(), choices=CONTRACT_TYPE_CHOICES, required=True)

@register.filter(is_safe=False)
@stringfilter
def endswith(value, suffix):
    return value.endswith(suffix)
